// Generated by Apple Swift version 4.0 (swiftlang-900.0.65 clang-900.0.37)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import UIKit;
@import QuartzCore;
@import ObjectiveC;
@import CoreGraphics;
@import Foundation;
@import Speech;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("Eva")
@class UIWindow;
@class UIApplication;

SWIFT_CLASS("_TtC3Eva11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

SWIFT_CLASS("_TtC3Eva17BaseTableViewCell")
@interface BaseTableViewCell : UITableViewCell
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (void)setHighlighted:(BOOL)highlighted animated:(BOOL)animated;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
@end




SWIFT_CLASS("_TtC3Eva20CBMCitiGradientLayer")
@interface CBMCitiGradientLayer : CAGradientLayer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLayer:(id _Nonnull)layer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3Eva17EvaDataController")
@interface EvaDataController : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3Eva17EvaLeftInsetLabel")
@interface EvaLeftInsetLabel : UILabel
- (void)drawTextInRect:(CGRect)rect;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3Eva18EvaRightInsetLabel")
@interface EvaRightInsetLabel : UILabel
- (void)drawTextInRect:(CGRect)rect;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;
@protocol UIViewControllerTransitionCoordinator;
@class UIGestureRecognizer;
@class UITouch;
@class UIPanGestureRecognizer;

SWIFT_CLASS("_TtC3Eva19SlideMenuController")
@interface SlideMenuController : UIViewController <UIGestureRecognizerDelegate>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) BOOL shouldAutorotate;
- (void)viewWillLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)showTextSearchVC:(UIGestureRecognizer * _Nonnull)recognizer;
- (void)showVoiceSearchVC:(UIGestureRecognizer * _Nonnull)recognizer;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (void)openLeft;
- (void)closeLeft;
- (void)toggleLeft;
- (void)handleLeftPanGesture:(UIPanGestureRecognizer * _Nonnull)panGesture;
@end


SWIFT_CLASS("_TtC3Eva21ExSlideMenuController")
@interface ExSlideMenuController : SlideMenuController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;
@class UIFont;

SWIFT_CLASS("_TtC3Eva17FloatingTextField")
@interface FloatingTextField : UITextField
/// A UIColor value that determines the text color of the editable text
@property (nonatomic, strong) UIColor * _Nullable textColor;
/// A UIColor value that determines text color of the placeholder label
@property (nonatomic, strong) UIColor * _Nonnull placeholderColor;
/// A UIColor value that determines text color of the placeholder label
@property (nonatomic, strong) UIFont * _Nullable placeholderFont;
/// A UIColor value that determines the text color of the title label when in the normal state //change
@property (nonatomic, strong) UIColor * _Nonnull titleColor;
/// A UIColor value that determines the color of the bottom line when in the normal state
@property (nonatomic, strong) UIColor * _Nonnull lineColor;
/// A UIColor value that determines the color used for the title label and the line when the error message is not <code>nil</code>
@property (nonatomic, strong) UIColor * _Nonnull errorColor;
/// A UIColor value that determines the text color of the title label when editing
@property (nonatomic, strong) UIColor * _Nonnull selectedTitleColor;
/// A UIColor value that determines the color of the line in a selected state
@property (nonatomic, strong) UIColor * _Nonnull selectedLineColor;
/// A CGFloat value that determines the height for the bottom line when the control is in the normal state
@property (nonatomic) CGFloat lineHeight;
/// A CGFloat value that determines the height for the bottom line when the control is in a selected state
@property (nonatomic) CGFloat selectedLineHeight;
/// Identifies whether the text object should hide the text being entered.
@property (nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
/// A Boolean value that determines whether the receiver is highlighted. When changing this value, highlighting will be done with animation
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
/// The text content of the textfield
@property (nonatomic, copy) NSString * _Nullable text;
/// The String to display when the input field is empty.
/// The placeholder can also appear in the title label when both <code>title</code> <code>selectedTitle</code> and are <code>nil</code>.
@property (nonatomic, copy) NSString * _Nullable placeholder;
/// The String to display when the textfield is editing and the input is not empty.
@property (nonatomic, copy) NSString * _Nullable selectedTitle;
/// The String to display when the textfield is not editing and the input is not empty.
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, getter=isSelected) BOOL selected;
/// Initializes the control
/// \param frame the frame of the control 
///
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// Intialzies the control by deserializing it
/// \param coder the object to deserialize the control from 
///
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Invoked when the editing state of the textfield changes. Override to respond to this change.
- (void)editingChanged;
/// Attempt the control to become the first responder
///
/// returns:
/// True when successfull becoming the first responder
- (BOOL)becomeFirstResponder;
/// Attempt the control to resign being the first responder
///
/// returns:
/// True when successfull resigning being the first responder
- (BOOL)resignFirstResponder;
/// Calculate the rectangle for the textfield when it is not being edited
/// \param bounds The current bounds of the field
///
///
/// returns:
/// The rectangle that the textfield should render in
- (CGRect)textRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
/// Calculate the rectangle for the textfield when it is being edited
/// \param bounds The current bounds of the field
///
///
/// returns:
/// The rectangle that the textfield should render in
- (CGRect)editingRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
/// Calculate the rectangle for the placeholder
/// \param bounds The current bounds of the placeholder
///
///
/// returns:
/// The rectangle that the placeholder should render in
- (CGRect)placeholderRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
/// Invoked when the interface builder renders the control
- (void)prepareForInterfaceBuilder;
/// Invoked by layoutIfNeeded automatically
- (void)layoutSubviews;
/// Calculate the content size for auto layout
///
/// returns:
/// the content size to be used for auto layout
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@end


SWIFT_CLASS("_TtC3Eva19GraphViewController")
@interface GraphViewController : UIViewController
- (void)viewDidLoad;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UISwitch;
@class UIButton;
@class UIView;

SWIFT_CLASS("_TtC3Eva21InitialViewController")
@interface InitialViewController : UIViewController <UITextFieldDelegate>
@property (nonatomic, weak) IBOutlet FloatingTextField * _Nullable loginEmailField;
@property (nonatomic, weak) IBOutlet FloatingTextField * _Nullable loginPasswordField;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable enableTouchIDLabel;
@property (nonatomic, weak) IBOutlet UISwitch * _Nullable touchIDSwitch;
@property (nonatomic, weak) IBOutlet UIButton * _Nullable loginButton;
@property (nonatomic, weak) IBOutlet UIView * _Nullable loginView;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable lblLoginErrorMsg;
@property (nonatomic, weak) IBOutlet UIButton * _Nullable buttonTouchIDThumb;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
- (IBAction)btnLoginClicked:(id _Nonnull)sender;
- (IBAction)touchIDStateChange:(id _Nonnull)sender;
- (IBAction)thumbPressedTouchIdEnable:(id _Nonnull)sender;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)keyboardWillShow:(NSNotification * _Nonnull)note;
- (void)thumbTouchIDClicked:(UIButton * _Nonnull)sender;
- (void)catchNotification;
- (void)loopVideo;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;

SWIFT_CLASS("_TtC3Eva18LeftViewController")
@interface LeftViewController : UIViewController
@property (nonatomic, weak) IBOutlet UITableView * _Nullable tableView;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface LeftViewController (SWIFT_EXTENSION(Eva)) <UITableViewDataSource>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

@class UIScrollView;

@interface LeftViewController (SWIFT_EXTENSION(Eva)) <UITableViewDelegate>
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
@end

@class UITextView;
@class SwiftSiriWaveformView;
@class SiriContentView;
@class UIPageControl;

SWIFT_CLASS("_TtC3Eva18MainViewController")
@interface MainViewController : UIViewController <UIGestureRecognizerDelegate>
@property (nonatomic, weak) IBOutlet UITableView * _Nullable tableView;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified microphoneButton;
@property (nonatomic, weak) IBOutlet UIView * _Nullable siriVoiceView;
@property (nonatomic, weak) IBOutlet UIView * _Nullable siriManualView;
@property (nonatomic, weak) IBOutlet UIView * _Nullable siriVoiceSubView;
@property (nonatomic, weak) IBOutlet UIView * _Nullable siriManualSubView;
@property (nonatomic, weak) IBOutlet UITextView * _Nullable siriManualTextView;
@property (nonatomic, weak) IBOutlet UIButton * _Nullable siriManualCancelButton;
@property (nonatomic, weak) IBOutlet UIButton * _Nullable siriManualGoButton;
@property (nonatomic, weak) IBOutlet UITextView * _Nullable textView;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable siriSearchTextLabel;
@property (nonatomic, weak) IBOutlet SwiftSiriWaveformView * _Nullable audioView;
@property (nonatomic, weak) IBOutlet SiriContentView * _Nullable siriContentView;
@property (nonatomic, weak) IBOutlet UIPageControl * _Nullable pageControl;
@property (nonatomic, weak) IBOutlet UIView * _Nullable containerView;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable headerLabel;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)didReceiveMemoryWarning;
/// Button Click event for Text’s Search ‘Cancel’ button
- (IBAction)textSearchCancelClicked:(id _Nonnull)sender;
/// Button Click event for Text’s Search ‘GO’ button
- (IBAction)textSearchGoClicked:(id _Nullable)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class SFSpeechRecognizer;

@interface MainViewController (SWIFT_EXTENSION(Eva)) <SFSpeechRecognizerDelegate>
- (void)speechRecognizer:(SFSpeechRecognizer * _Nonnull)speechRecognizer availabilityDidChange:(BOOL)available;
@end


SWIFT_PROTOCOL("_TtP3Eva27SlideMenuControllerDelegate_")
@protocol SlideMenuControllerDelegate
@optional
- (void)leftWillOpen;
- (void)leftDidOpen;
- (void)leftWillClose;
- (void)leftDidClose;
@end


@interface MainViewController (SWIFT_EXTENSION(Eva)) <SlideMenuControllerDelegate>
- (void)leftWillOpen;
- (void)leftDidOpen;
- (void)leftWillClose;
- (void)leftDidClose;
@end


@interface MainViewController (SWIFT_EXTENSION(Eva)) <UITextViewDelegate>
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidBeginEditing:(UITextView * _Nonnull)textView;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
@end

@class NSTimer;

@interface MainViewController (SWIFT_EXTENSION(Eva))
/// Show/Hide Text search view on Tap Gesture Recoginizer
- (void)showTextSearchVC:(UIGestureRecognizer * _Nullable)recognizer;
/// Show/Hide Voice search view on Long Press Gesture Recoginizer
- (void)showVoiceSearchVC:(UIGestureRecognizer * _Nonnull)recognizer;
- (void)refreshAudioView:(NSTimer * _Nonnull)_;
- (void)flyingLabelTapped:(UIGestureRecognizer * _Nonnull)recognizer;
@end


SWIFT_CLASS("_TtC3Eva12MenuTopItems")
@interface MenuTopItems : UIView
@property (nonatomic, weak) IBOutlet UILabel * _Nullable lblTotal;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable lblOutstanding;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable lblTotalCashAmt;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable lblOutstandingAmt;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable nickNameLabel;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3Eva26MerchantInfoViewController")
@interface MerchantInfoViewController : UIViewController <UITextFieldDelegate>
@property (nonatomic, weak) IBOutlet UITextField * _Nullable nicknameField;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable displayTextLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable errorMessageLabel;
@property (nonatomic, weak) IBOutlet UIButton * _Nullable btnSave;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (IBAction)btnSaveTapped:(id _Nonnull)sender;
- (IBAction)backButtonClicked:(id _Nonnull)sender;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (void)didReceiveMemoryWarning;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImageView;
@class NSLayoutConstraint;

SWIFT_CLASS("_TtC3Eva25MessageTypeViewController")
@interface MessageTypeViewController : GraphViewController
@property (nonatomic, weak) IBOutlet UIView * _Nullable viewMessage;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable messageUserInputLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable messageLabel;
@property (nonatomic, weak) IBOutlet UIImageView * _Nullable confirmationCheckMarkImageView;
@property (nonatomic, weak) IBOutlet UIView * _Nullable viewMessageWithChart;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable barMessageUserInputLabel;
@property (nonatomic, weak) IBOutlet UIView * _Nullable barChartView;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable barMessageLabel;
@property (nonatomic, weak) IBOutlet UIView * _Nullable viewMessageWithPieChart;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable pieMessageUserInputLabel;
@property (nonatomic, weak) IBOutlet UIView * _Nullable pieChartView;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable pieMessageLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable pieNotesLabel;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Nullable pieChartViewHeightConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Nullable pieChartNotesTopConstraint;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
- (void)backButtonActionWithSender:(UIButton * _Nullable)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC3Eva28RecentSearchesViewController")
@interface RecentSearchesViewController : UIViewController <UIGestureRecognizerDelegate>
@property (nonatomic, weak) IBOutlet UILabel * _Nullable firstInfoLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable secondInfoLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable thirdInfoLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable fourthInfoLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable fifthInfoLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable headerLabel;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified headerLabelTopConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified firstLblTopConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified secondLblTopConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified thirdLblTopConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified fourthLblTopConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified fifthLblTopConstraint;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
- (void)labelTapped:(UIGestureRecognizer * _Nonnull)recognizer;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3Eva19ScrollableGraphView")
@interface ScrollableGraphView : UIScrollView <UIScrollViewDelegate>
/// Specifies how thick the graph of the line is. In points.
@property (nonatomic) CGFloat lineWidth;
@property (nonatomic, strong) UIColor * _Nonnull lineColor;
@property (nonatomic) NSInteger lineStyle_;
/// How each segment in the line should connect. Takes any of the Core Animation LineJoin values.
@property (nonatomic, copy) NSString * _Nonnull lineJoin;
/// The line caps. Takes any of the Core Animation LineCap values.
@property (nonatomic, copy) NSString * _Nonnull lineCap;
@property (nonatomic) CGFloat lineCurviness;
/// Whether bars should be drawn or not. If you want a bar graph, this should be set to true.
@property (nonatomic) BOOL shouldDrawBarLayer;
/// The width of an individual bar on the graph.
@property (nonatomic) CGFloat barWidth;
/// The actual colour of the bar.
@property (nonatomic, strong) UIColor * _Nonnull barColor;
/// The width of the outline of the bar
@property (nonatomic) CGFloat barLineWidth;
/// The colour of the bar outline
@property (nonatomic, strong) UIColor * _Nonnull barLineColor;
/// Whether the bars should be drawn with rounded corners
@property (nonatomic) BOOL shouldRoundBarCorners;
/// The background colour for the entire graph view, not just the plotted graph.
@property (nonatomic, strong) UIColor * _Nonnull backgroundFillColor;
/// Specifies whether or not the plotted graph should be filled with a colour or gradient.
@property (nonatomic) BOOL shouldFill;
@property (nonatomic) NSInteger fillType_;
/// If fillType is set to .Solid then this colour will be used to fill the graph.
@property (nonatomic, strong) UIColor * _Nonnull fillColor;
/// If fillType is set to .Gradient then this will be the starting colour for the gradient.
@property (nonatomic, strong) UIColor * _Nonnull fillGradientStartColor;
/// If fillType is set to .Gradient, then this will be the ending colour for the gradient.
@property (nonatomic, strong) UIColor * _Nonnull fillGradientEndColor;
@property (nonatomic) NSInteger fillGradientType_;
/// How far the “maximum” reference line is from the top of the view’s frame. In points.
@property (nonatomic) CGFloat topMargin;
/// How far the “minimum” reference line is from the bottom of the view’s frame. In points.
@property (nonatomic) CGFloat bottomMargin;
/// How far the first point on the graph should be placed from the left hand side of the view.
@property (nonatomic) CGFloat leftmostPointPadding;
/// How far the final point on the graph should be placed from the right hand side of the view.
@property (nonatomic) CGFloat rightmostPointPadding;
/// How much space should be between each data point.
@property (nonatomic) CGFloat dataPointSpacing;
@property (nonatomic) NSInteger direction_;
/// If this is set to true, then the range will automatically be detected from the data the graph is given.
@property (nonatomic) BOOL shouldAutomaticallyDetectRange;
/// Forces the graph’s minimum to always be zero. Used in conjunction with shouldAutomaticallyDetectRange or shouldAdaptRange, if you want to force the minimum to stay at 0 rather than the detected minimum.
@property (nonatomic) BOOL shouldRangeAlwaysStartAtZero;
/// The minimum value for the y-axis. This is ignored when shouldAutomaticallyDetectRange or shouldAdaptRange = true
@property (nonatomic) double rangeMin;
/// The maximum value for the y-axis. This is ignored when shouldAutomaticallyDetectRange or shouldAdaptRange = true
@property (nonatomic) double rangeMax;
/// Whether or not to draw a symbol for each data point.
@property (nonatomic) BOOL shouldDrawDataPoint;
/// The size of the shape to draw for each data point.
@property (nonatomic) CGFloat dataPointSize;
/// The colour with which to fill the shape.
@property (nonatomic, strong) UIColor * _Nonnull dataPointFillColor;
/// Whether or not the y-axis’ range should adapt to the points that are visible on screen. This means if there are only 5 points visible on screen at any given time, the maximum on the y-axis will be the maximum of those 5 points. This is updated automatically as the user scrolls along the graph.
@property (nonatomic) BOOL shouldAdaptRange;
/// If shouldAdaptRange is set to true then this specifies whether or not the points on the graph should animate to their new positions. Default is set to true.
@property (nonatomic) BOOL shouldAnimateOnAdapt;
/// How long the animation should take. Affects both the startup animation and the animation when the range of the y-axis adapts to onscreen points.
@property (nonatomic) double animationDuration;
@property (nonatomic) NSInteger adaptAnimationType_;
/// Whether or not the graph should animate to their positions when the graph is first displayed.
@property (nonatomic) BOOL shouldAnimateOnStartup;
/// Whether or not to show the y-axis reference lines and labels.
@property (nonatomic) BOOL shouldShowReferenceLines;
/// The colour for the reference lines.
@property (nonatomic, strong) UIColor * _Nonnull referenceLineColor;
/// The thickness of the reference lines.
@property (nonatomic) CGFloat referenceLineThickness;
@property (nonatomic) NSInteger referenceLinePosition_;
/// How many reference lines should be between the minimum and maximum reference lines. If you want a total of 4 reference lines, you would set this to 2. This can be set to 0 for no intermediate reference lines.This can be used to create reference lines at specific intervals. If the desired result is to have a reference line at every 10 units on the y-axis, you could, for example, set rangeMax to 100, rangeMin to 0 and numberOfIntermediateReferenceLines to 9.
@property (nonatomic) NSInteger numberOfIntermediateReferenceLines;
/// Whether or not to add labels to the intermediate reference lines.
@property (nonatomic) BOOL shouldAddLabelsToIntermediateReferenceLines;
/// Whether or not to add units specified by the referenceLineUnits variable to the labels on the intermediate reference lines.
@property (nonatomic) BOOL shouldAddUnitsToIntermediateReferenceLineLabels;
/// The colour of the reference line labels.
@property (nonatomic, strong) UIColor * _Nonnull referenceLineLabelColor;
/// Whether or not to show the units on the reference lines.
@property (nonatomic) BOOL shouldShowReferenceLineUnits;
/// The units that the y-axis is in. This string is used for labels on the reference lines.
@property (nonatomic, copy) NSString * _Nullable referenceLineUnits;
/// The number of decimal places that should be shown on the reference line labels.
@property (nonatomic) NSInteger referenceLineNumberOfDecimalPlaces;
/// The NSNumberFormatterStyle that reference lines should use to display
@property (nonatomic) NSNumberFormatterStyle referenceLineNumberStyle;
/// Whether or not to show the labels on the x-axis for each point.
@property (nonatomic) BOOL shouldShowLabels;
/// How far from the “minimum” reference line the data point labels should be rendered.
@property (nonatomic) CGFloat dataPointLabelTopMargin;
/// How far from the bottom of the view the data point labels should be rendered.
@property (nonatomic) CGFloat dataPointLabelBottomMargin;
/// The font for the data point labels.
@property (nonatomic, strong) UIColor * _Nonnull dataPointLabelColor;
/// Used to force the graph to show every n-th dataPoint label
@property (nonatomic) NSInteger dataPointLabelsSparsity;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForInterfaceBuilder;
- (void)layoutSubviews;
@end

typedef SWIFT_ENUM(NSInteger, ScrollableGraphViewAnimationType) {
  ScrollableGraphViewAnimationTypeEaseOut = 0,
  ScrollableGraphViewAnimationTypeElastic = 1,
  ScrollableGraphViewAnimationTypeCustom = 2,
};

typedef SWIFT_ENUM(NSInteger, ScrollableGraphViewDataPointType) {
  ScrollableGraphViewDataPointTypeCircle = 0,
  ScrollableGraphViewDataPointTypeSquare = 1,
  ScrollableGraphViewDataPointTypeCustom = 2,
};

typedef SWIFT_ENUM(NSInteger, ScrollableGraphViewDirection) {
  ScrollableGraphViewDirectionLeftToRight = 0,
  ScrollableGraphViewDirectionRightToLeft = 1,
};

typedef SWIFT_ENUM(NSInteger, ScrollableGraphViewFillType) {
  ScrollableGraphViewFillTypeSolid = 0,
  ScrollableGraphViewFillTypeGradient = 1,
};

typedef SWIFT_ENUM(NSInteger, ScrollableGraphViewGradientType) {
  ScrollableGraphViewGradientTypeLinear = 0,
  ScrollableGraphViewGradientTypeRadial = 1,
};

typedef SWIFT_ENUM(NSInteger, ScrollableGraphViewLineStyle) {
  ScrollableGraphViewLineStyleStraight = 0,
  ScrollableGraphViewLineStyleSmooth = 1,
};

typedef SWIFT_ENUM(NSInteger, ScrollableGraphViewReferenceLinePosition) {
  ScrollableGraphViewReferenceLinePositionLeft = 0,
  ScrollableGraphViewReferenceLinePositionRight = 1,
  ScrollableGraphViewReferenceLinePositionBoth = 2,
};

typedef SWIFT_ENUM(NSInteger, ScrollableGraphViewReferenceLineType) {
  ScrollableGraphViewReferenceLineTypeCover = 0,
};


SWIFT_CLASS("_TtC3Eva21SettingsTableViewCell")
@interface SettingsTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UILabel * _Nullable labelName;
@property (nonatomic, weak) IBOutlet UIImageView * _Nullable imageArrow;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable lableNickName;
@property (nonatomic, weak) IBOutlet UISwitch * _Nullable switchScore;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3Eva22SettingsViewController")
@interface SettingsViewController : UIViewController <UIGestureRecognizerDelegate, UITableViewDataSource, UITableViewDelegate>
@property (nonatomic, weak) IBOutlet UITableView * _Nullable tableViewSettings;
@property (nonatomic, weak) IBOutlet UISwitch * _Nullable touchIDSwitch;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
- (void)viewWillDisappear:(BOOL)animated;
- (void)setStatusBarColor;
- (IBAction)touchIDStateChange:(UIButton * _Nonnull)sender;
- (IBAction)speakerStateChange:(UIButton * _Nonnull)sender;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)tableView:(UITableView * _Nonnull)tableView titleForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3Eva15SiriContentView")
@interface SiriContentView : UIView
@property (nonatomic, weak) IBOutlet UILabel * _Nullable nameLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable headerLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable firstInfoLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable secondInfoLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable thirdInfoLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable fourthInfoLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable fifthInfoLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable sixthInfoLabel;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified firstLblTopConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified secondLblTopConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified thirdLblTopConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified fourthLblTopConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified fifthLblTopConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified sixthLblTopConstraint;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)animateBoard;
- (void)showActionWithTimer:(NSTimer * _Nonnull)timer;
- (void)hideActionWithTimer:(NSTimer * _Nonnull)timer;
@end




SWIFT_CLASS("_TtC3Eva21SwiftSiriWaveformView")
@interface SwiftSiriWaveformView : UIView
@property (nonatomic) CGFloat frequency;
@property (nonatomic) CGFloat idleAmplitude;
@property (nonatomic) CGFloat phaseShift;
@property (nonatomic) CGFloat density;
@property (nonatomic) CGFloat primaryLineWidth;
@property (nonatomic) CGFloat secondaryLineWidth;
@property (nonatomic) NSInteger numberOfWaves;
@property (nonatomic, strong) UIColor * _Nonnull waveColor;
@property (nonatomic) CGFloat amplitude;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC3Eva19TransactionInfoCell")
@interface TransactionInfoCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UILabel * _Nullable dateLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable transDetailLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable transcategoryLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable pending_indicatorLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable amtLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable transDetailheaderLabel;
@property (nonatomic, weak) IBOutlet UIImageView * _Nullable transDetailheaderImgView;
@property (nonatomic, weak) IBOutlet UIImageView * _Nullable topSeparatorImgView;
- (void)awakeFromNib;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3Eva32TransactionsResultViewController")
@interface TransactionsResultViewController : GraphViewController
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified tableViewTopConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified appleHeightConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified appleWidthConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified bottomViewaHeightConstraint;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified bottomView;
@property (nonatomic, weak) IBOutlet UITableView * _Null_unspecified tableView;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified tableViewBottomConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified headerTopConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified headerHeightConstraint;
@property (nonatomic, weak) IBOutlet UIButton * _Nullable menuButton;
@property (nonatomic, weak) IBOutlet UIButton * _Nullable microphoneButton;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
- (void)viewDidLoad;
- (void)setStatusBarColor;
- (void)viewWillAppear:(BOOL)animated;
- (void)backButtonActionWithSender:(UIButton * _Nullable)sender;
- (void)didReceiveMemoryWarning;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableViewRowAction;

@interface TransactionsResultViewController (SWIFT_EXTENSION(Eva)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSArray<UITableViewRowAction *> * _Nullable)tableView:(UITableView * _Nonnull)tableView editActionsForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
/// <hr/>
/// \code
///  // TODO :if scrolling upto bottom then Scroll up if offset values goes 100 setting default Constraint
///  // Need to check how to need that animation.
///  ***********
///
/// \endcode
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
@end




















@interface UIViewController (SWIFT_EXTENSION(Eva))
- (void)menuButtonClicked;
- (void)toggleLeft;
- (void)openLeft;
- (void)closeLeft;
@end


@interface UIViewController (SWIFT_EXTENSION(Eva))
+ (UIApplication * _Nonnull)application SWIFT_WARN_UNUSED_RESULT;
+ (AppDelegate * _Nonnull)appDelegate SWIFT_WARN_UNUSED_RESULT;
/// Get the app main window
+ (UIWindow * _Nullable)mainWindow SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC3Eva14ViewController")
@interface ViewController : UIViewController
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (IBAction)doSaleTransactionWithSender:(id _Nonnull)sender;
- (IBAction)action_connect450ButtonWithSender:(id _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3Eva16customHeaderView")
@interface customHeaderView : UIView <UIScrollViewDelegate>
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified amountHeightConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified topViewHeightConstraint;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified amountView;
@property (nonatomic, weak) IBOutlet UIView * _Nullable messageLabelView;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable headerLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable searchTextLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable displayMessageLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable amtLabel;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
@end





SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
